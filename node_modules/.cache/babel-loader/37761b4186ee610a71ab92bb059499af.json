{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nexport var FetchResponse = /*#__PURE__*/function () {\n  function FetchResponse(response) {\n    _classCallCheck(this, FetchResponse);\n\n    this.response = response;\n  }\n\n  _createClass(FetchResponse, [{\n    key: \"statusCode\",\n    get: function get() {\n      return this.response.status;\n    }\n  }, {\n    key: \"redirected\",\n    get: function get() {\n      return this.response.redirected;\n    }\n  }, {\n    key: \"ok\",\n    get: function get() {\n      return this.response.ok;\n    }\n  }, {\n    key: \"unauthenticated\",\n    get: function get() {\n      return this.statusCode === 401;\n    }\n  }, {\n    key: \"unprocessableEntity\",\n    get: function get() {\n      return this.statusCode === 422;\n    }\n  }, {\n    key: \"authenticationURL\",\n    get: function get() {\n      return this.response.headers.get('WWW-Authenticate');\n    }\n  }, {\n    key: \"contentType\",\n    get: function get() {\n      var contentType = this.response.headers.get('Content-Type') || '';\n      return contentType.replace(/;.*$/, '');\n    }\n  }, {\n    key: \"headers\",\n    get: function get() {\n      return this.response.headers;\n    }\n  }, {\n    key: \"html\",\n    get: function get() {\n      if (this.contentType.match(/^(application|text)\\/(html|xhtml\\+xml)$/)) {\n        return this.text;\n      }\n\n      return Promise.reject(new Error(\"Expected an HTML response but got \\\"\".concat(this.contentType, \"\\\" instead\")));\n    }\n  }, {\n    key: \"json\",\n    get: function get() {\n      if (this.contentType.match(/^application\\/.*json$/)) {\n        return this.responseJson || (this.responseJson = this.response.json());\n      }\n\n      return Promise.reject(new Error(\"Expected a JSON response but got \\\"\".concat(this.contentType, \"\\\" instead\")));\n    }\n  }, {\n    key: \"text\",\n    get: function get() {\n      return this.responseText || (this.responseText = this.response.text());\n    }\n  }, {\n    key: \"isTurboStream\",\n    get: function get() {\n      return this.contentType.match(/^text\\/vnd\\.turbo-stream\\.html/);\n    }\n  }, {\n    key: \"renderTurboStream\",\n    value: function () {\n      var _renderTurboStream = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.isTurboStream) {\n                  _context.next = 13;\n                  break;\n                }\n\n                if (!window.Turbo) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.t0 = window.Turbo;\n                _context.next = 5;\n                return this.text;\n\n              case 5:\n                _context.t1 = _context.sent;\n                _context.next = 8;\n                return _context.t0.renderStreamMessage.call(_context.t0, _context.t1);\n\n              case 8:\n                _context.next = 11;\n                break;\n\n              case 10:\n                console.warn('You must set `window.Turbo = Turbo` to automatically process Turbo Stream events with request.js');\n\n              case 11:\n                _context.next = 14;\n                break;\n\n              case 13:\n                return _context.abrupt(\"return\", Promise.reject(new Error(\"Expected a Turbo Stream response but got \\\"\".concat(this.contentType, \"\\\" instead\"))));\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function renderTurboStream() {\n        return _renderTurboStream.apply(this, arguments);\n      }\n\n      return renderTurboStream;\n    }()\n  }]);\n\n  return FetchResponse;\n}();","map":null,"metadata":{},"sourceType":"module"}