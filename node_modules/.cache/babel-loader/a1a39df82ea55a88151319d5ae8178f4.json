{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { FetchRequest } from './fetch_request';\n\nfunction get(_x, _x2) {\n  return _get.apply(this, arguments);\n}\n\nfunction _get() {\n  _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url, options) {\n    var request;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            request = new FetchRequest('get', url, options);\n            return _context.abrupt(\"return\", request.perform());\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _get.apply(this, arguments);\n}\n\nfunction post(_x3, _x4) {\n  return _post.apply(this, arguments);\n}\n\nfunction _post() {\n  _post = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(url, options) {\n    var request;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            request = new FetchRequest('post', url, options);\n            return _context2.abrupt(\"return\", request.perform());\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _post.apply(this, arguments);\n}\n\nfunction put(_x5, _x6) {\n  return _put.apply(this, arguments);\n}\n\nfunction _put() {\n  _put = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(url, options) {\n    var request;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            request = new FetchRequest('put', url, options);\n            return _context3.abrupt(\"return\", request.perform());\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _put.apply(this, arguments);\n}\n\nfunction patch(_x7, _x8) {\n  return _patch.apply(this, arguments);\n}\n\nfunction _patch() {\n  _patch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(url, options) {\n    var request;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            request = new FetchRequest('patch', url, options);\n            return _context4.abrupt(\"return\", request.perform());\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _patch.apply(this, arguments);\n}\n\nfunction destroy(_x9, _x10) {\n  return _destroy.apply(this, arguments);\n}\n\nfunction _destroy() {\n  _destroy = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(url, options) {\n    var request;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            request = new FetchRequest('delete', url, options);\n            return _context5.abrupt(\"return\", request.perform());\n\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _destroy.apply(this, arguments);\n}\n\nexport { get, post, put, patch, destroy };","map":null,"metadata":{},"sourceType":"module"}