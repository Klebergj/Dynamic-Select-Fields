{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport { FetchResponse } from './fetch_response';\nimport { RequestInterceptor } from './request_interceptor';\nimport { getCookie, compact, metaContent, stringEntriesFromFormData, mergeEntries } from './lib/utils';\nexport var FetchRequest = /*#__PURE__*/function () {\n  function FetchRequest(method, url) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, FetchRequest);\n\n    this.method = method;\n    this.options = options;\n    this.originalUrl = url.toString();\n  }\n\n  _createClass(FetchRequest, [{\n    key: \"perform\",\n    value: function () {\n      var _perform = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var requestInterceptor, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                requestInterceptor = RequestInterceptor.get();\n\n                if (!requestInterceptor) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 5;\n                return requestInterceptor(this);\n\n              case 5:\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n\n              case 10:\n                _context.t1 = FetchResponse;\n                _context.next = 13;\n                return window.fetch(this.url, this.fetchOptions);\n\n              case 13:\n                _context.t2 = _context.sent;\n                response = new _context.t1(_context.t2);\n\n                if (!(response.unauthenticated && response.authenticationURL)) {\n                  _context.next = 17;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", Promise.reject(window.location.href = response.authenticationURL));\n\n              case 17:\n                if (!(response.ok && response.isTurboStream)) {\n                  _context.next = 20;\n                  break;\n                }\n\n                _context.next = 20;\n                return response.renderTurboStream();\n\n              case 20:\n                return _context.abrupt(\"return\", response);\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      function perform() {\n        return _perform.apply(this, arguments);\n      }\n\n      return perform;\n    }()\n  }, {\n    key: \"addHeader\",\n    value: function addHeader(key, value) {\n      var headers = this.additionalHeaders;\n      headers[key] = value;\n      this.options.headers = headers;\n    }\n  }, {\n    key: \"fetchOptions\",\n    get: function get() {\n      return {\n        method: this.method.toUpperCase(),\n        headers: this.headers,\n        body: this.formattedBody,\n        signal: this.signal,\n        credentials: 'same-origin',\n        redirect: this.redirect\n      };\n    }\n  }, {\n    key: \"headers\",\n    get: function get() {\n      return compact(Object.assign({\n        'X-Requested-With': 'XMLHttpRequest',\n        'X-CSRF-Token': this.csrfToken,\n        'Content-Type': this.contentType,\n        Accept: this.accept\n      }, this.additionalHeaders));\n    }\n  }, {\n    key: \"csrfToken\",\n    get: function get() {\n      return getCookie(metaContent('csrf-param')) || metaContent('csrf-token');\n    }\n  }, {\n    key: \"contentType\",\n    get: function get() {\n      if (this.options.contentType) {\n        return this.options.contentType;\n      } else if (this.body == null || this.body instanceof window.FormData) {\n        return undefined;\n      } else if (this.body instanceof window.File) {\n        return this.body.type;\n      }\n\n      return 'application/json';\n    }\n  }, {\n    key: \"accept\",\n    get: function get() {\n      switch (this.responseKind) {\n        case 'html':\n          return 'text/html, application/xhtml+xml';\n\n        case 'turbo-stream':\n          return 'text/vnd.turbo-stream.html, text/html, application/xhtml+xml';\n\n        case 'json':\n          return 'application/json, application/vnd.api+json';\n\n        default:\n          return '*/*';\n      }\n    }\n  }, {\n    key: \"body\",\n    get: function get() {\n      return this.options.body;\n    }\n  }, {\n    key: \"query\",\n    get: function get() {\n      var originalQuery = (this.originalUrl.split('?')[1] || '').split('#')[0];\n      var params = new URLSearchParams(originalQuery);\n      var requestQuery = this.options.query;\n\n      if (requestQuery instanceof window.FormData) {\n        requestQuery = stringEntriesFromFormData(requestQuery);\n      } else if (requestQuery instanceof window.URLSearchParams) {\n        requestQuery = requestQuery.entries();\n      } else {\n        requestQuery = Object.entries(requestQuery || {});\n      }\n\n      mergeEntries(params, requestQuery);\n      var query = params.toString();\n      return query.length > 0 ? \"?\".concat(query) : '';\n    }\n  }, {\n    key: \"url\",\n    get: function get() {\n      return this.originalUrl.split('?')[0].split('#')[0] + this.query;\n    }\n  }, {\n    key: \"responseKind\",\n    get: function get() {\n      return this.options.responseKind || 'html';\n    }\n  }, {\n    key: \"signal\",\n    get: function get() {\n      return this.options.signal;\n    }\n  }, {\n    key: \"redirect\",\n    get: function get() {\n      return this.options.redirect || 'follow';\n    }\n  }, {\n    key: \"additionalHeaders\",\n    get: function get() {\n      return this.options.headers || {};\n    }\n  }, {\n    key: \"formattedBody\",\n    get: function get() {\n      var bodyIsAString = Object.prototype.toString.call(this.body) === '[object String]';\n      var contentTypeIsJson = this.headers['Content-Type'] === 'application/json';\n\n      if (contentTypeIsJson && !bodyIsAString) {\n        return JSON.stringify(this.body);\n      }\n\n      return this.body;\n    }\n  }]);\n\n  return FetchRequest;\n}();","map":null,"metadata":{},"sourceType":"module"}