{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nexport var RequestInterceptor = /*#__PURE__*/function () {\n  function RequestInterceptor() {\n    _classCallCheck(this, RequestInterceptor);\n  }\n\n  _createClass(RequestInterceptor, null, [{\n    key: \"register\",\n    value: function register(interceptor) {\n      this.interceptor = interceptor;\n    }\n  }, {\n    key: \"get\",\n    value: function get() {\n      return this.interceptor;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.interceptor = undefined;\n    }\n  }]);\n\n  return RequestInterceptor;\n}();","map":null,"metadata":{},"sourceType":"module"}